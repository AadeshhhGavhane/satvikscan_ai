version: '3.8'

services:
  # Redis service for task queue
  redis:
    image: redis:7-alpine
    container_name: satvikscan-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    command: redis-server --appendonly yes --logfile /var/log/redis/redis.log
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - satvikscan-network

  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: satvikscan-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - QUEUE_CONCURRENCY=${QUEUE_CONCURRENCY:-5}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
    volumes:
      - ./logs/api:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bun", "run", "-e", "fetch('http://localhost:3000/health').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - satvikscan-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Background Worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: satvikscan-worker
    restart: unless-stopped
    command: ["bun", "run", "start:worker"]
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - QUEUE_CONCURRENCY=${QUEUE_CONCURRENCY:-5}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
    volumes:
      - ./logs/worker:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - satvikscan-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

volumes:
  redis_data:
    driver: local

networks:
  satvikscan-network:
    driver: bridge
